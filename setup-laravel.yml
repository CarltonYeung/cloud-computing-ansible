---
- hosts: all
  remote_user: ubuntu

  vars:
    document_root: /var/www/html
    project_name: twitir
    project_dir: '{{ document_root }}/{{ project_name }}'
    apache_conf: /etc/apache2/apache2.conf

  tasks:
    - name: Update and upgrade apt packages
      become: true
      apt:
        update_cache: yes
        upgrade: yes
        autoremove: yes

    - name: Install apache2
      become: true
      apt:
        name: apache2
        state: latest
        update_cache: yes

    - name: Enable apache2 mod_rewrite
      become: true
      apache2_module:
        name: rewrite
      notify:
        - restart apache2

    - name: Set 'AllowOverride All' in apache2.conf
      become: true
      replace:
        path: '{{ apache_conf }}'
        regexp: '(<Directory\s+/var/www/>\s+.*\s+AllowOverride\s+)None'
        replace: '\1All'

    - name: Add php7.2 repository
      become: true
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: Install php7.2 and some required packages
      become: true
      apt:
        name: '{{ item }}'
        state: latest
        update_cache: yes
      with_items:
        - php7.2
        - php7.2-common
        - php7.2-mbstring
        - php7.2-xml
        - zip
        - unzip
        - php7.2-zip
        - php7.2-mysql

    - name: Install Composer
      become: true
      apt:
        name: composer
        state: latest
        update_cache: yes

    - name: Stat project_dir
      stat:
        path: '{{ project_dir }}'
      register: project_dir_stat

    - name: Create Laravel project
      become: true
      composer:
        command: create-project
        arguments: laravel/laravel {{ project_dir }} --no-dev
        prefer_dist: true
        working_dir: '{{ document_root }}'
      when: not project_dir_stat.stat.exists

    - name: Stat '.env.example'
      stat:
        path: '{{ project_dir }}/.env.example'
      register: envexample

    - name: Stat '.env'
      stat:
        path: '{{ project_dir }}/.env'
      register: env

    - name: Rename '.env.example' to '.env'
      become: true
      command: mv '{{ project_dir }}/.env.example' '{{ project_dir }}/.env'
      when:
        - envexample.stat.exists
        - not env.stat.exists
      notify:
        - generate application key

    - name: Configure .env (only for keys that already exist)
      become: true
      replace:
        path: '{{ project_dir }}/.env'
        regexp: '{{ item.key }}=[^\n]*\n'
        replace: '{{ item.key }}={{ item.value }}\n'
      with_items:
        - { key: 'APP_NAME'         , value: 'twitir'                                          }
        - { key: 'DB_CONNECTION'    , value: 'mysql'                                           }
        - { key: 'DB_HOST'          , value: 'twitir.cioremsnl6gk.us-east-2.rds.amazonaws.com' }
        - { key: 'DB_PORT'          , value: '3306'                                            }
        - { key: 'DB_DATABASE'      , value: 'twitir'                                          }
        - { key: 'DB_USERNAME'      , value: 'ubuntu'                                          }
        - { key: 'DB_PASSWORD'      , value: 'Chill19135123'                                   }
        - { key: 'MAIL_DRIVER'      , value: 'smtp'                                            }
        - { key: 'MAIL_HOST'        , value: 'localhost'                                       }
        - { key: 'MAIL_PORT'        , value: '25'                                              }
        - { key: 'MAIL_USERNAME'    , value: 'null'                                            }
        - { key: 'MAIL_PASSWORD'    , value: 'null'                                            }
        - { key: 'MAIL_ENCRYPTION'  , value: 'null'                                            }
        - { key: 'MAIL_FROM_ADDRESS', value: 'noreply@twitir.io'                               }
        - { key: 'MAIL_FROM_NAME'   , value: 'twitir'                                          }

    - name: Directories within the storage and the bootstrap/cache directories should be writable by your web server or Laravel will not run
      become: true
      file:
        path: '{{ project_dir }}/{{ item }}'
        owner: www-data
        group: www-data
        state: directory
        recurse: yes
      with_items:
        - storage
        - bootstrap/cache

    - name: Set document root to Laravel's /public directory
      become: true
      replace:
        path: /etc/apache2/sites-enabled/000-default.conf
        regexp: '(DocumentRoot\s+)(.*)(\n)'
        replace: '\1{{ project_dir }}/public\3'
      notify:
        - restart apache2



  handlers:
    - name: restart apache2
      become: true
      service:
        name: apache2
        state: restarted

    - name: generate application key
      become: true
      command: php artisan key:generate
      args:
        chdir: '{{ project_dir }}'
